---
- name: Validate and Install Required Application
  hosts: all
  gather_facts: no
  tasks:
    - name: Check if {{ required_app }} is installed
      command: "which {{ required_app }}"
      register: app_check
      ignore_errors: no
      failed_when: app_check.rc == 1
      changed_when: false
      tags: check_app

    - name: Debug app_check result
      debug:
        var: app_check
      when: app_check is defined and app_check.rc == 0
      tags: debug_app_check

    - name: Debug app_check error
      debug:
        var: app_check.stderr
      when: app_check is defined and app_check.rc != 0
      tags: debug_app_check_error

    - name: Ensure the required app is installed
      package:
        name: "{{ required_app }}"
        state: present
      when: app_check.rc != 0
      tags: install_app

    - name: Debug app installation result
      debug:
        msg: "{{ required_app }} has been installed."
      when: app_check.rc != 0
      tags: debug_install_app

    - name: Debug if the app was already installed
      debug:
        msg: "{{ required_app }} is already installed."
      when: app_check.rc == 0
      tags: debug_already_installed

    - name: Install required app using an alternative method
      command: "apt-get install -y {{ required_app }}"
      when: app_check.rc != 0
      tags: install_app_alternative

    - name: Debug alternative installation result
      debug:
        msg: "{{ required_app }} has been installed using the alternative method."
      when: app_check.rc != 0
      tags: debug_install_app_alternative

    - name: Debug if the app was already installed using alternative method
      debug:
        msg: "{{ required_app }} is already installed using the alternative method."
      when: app_check.rc == 0
      tags: debug_already_installed_alternative